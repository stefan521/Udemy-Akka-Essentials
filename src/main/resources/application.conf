akka {
  loglevel = INFO
}

mySpecialConfig {
  akka {
    loglevel = INFO
  }
}

# timed assertions test config
specialTimedAssertionsConfig {
  akka.test.single-expect-default = 0.3s
}

# intercepting log messages test
interceptingLogMessages {
  akka {
    loggers = ["akka.testkit.TestEventListener"]
  }
}

routerDemo {
  akka {
    actor.deployment {
      /poolMaster2 {
        router = round-robin-pool
        nr-of-instanes = 5
      }

      /groupMaster2 {
        router = round-robin-group
        rotees.paths = [
          "/user/slave_1",
          "/user/slave_2",
          "/user/slave_3",
          "/user/slave_4",
          "/user/slave_5"
        ]
      }
    }
  }
}

# dispatchers controls how messages are being sent and hadnled
my-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 1 // threads
  }
  throughput = 30 // nr of messages that a dispatcher can handle for 1 actor until switching threads
}

dispatchersDemo {
  akka.actor.deployment {
    /rtjvm { // the actor path
      dispatched = my-dispatcher
    }
  }
}

# mailboxes demo
mailboxesDemo {
  control-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }

  support-ticket-dispatcher {
    mailbox-type = "part5infrastructure.MailboxesDemo$SupportTickerPriorityMailbox"
  }
}